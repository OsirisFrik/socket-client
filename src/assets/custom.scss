@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300&display=swap');
@import './dark';

body {
  margin: 0;
  overflow: hidden;
  font-family: 'Roboto', sans-serif;
}

#app {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2c3e50;
}

#nav {
  padding: 30px;

  a {
    font-weight: bold;
    color: #2c3e50;

    &.router-link-exact-active {
      color: #42b983;
    }
  }
}

.el-container.socket-view {
  .el-main {
    padding: 0;

    .el-tabs__content {
      padding: 0 15px;
    }
  }
}

.align-switch {
  margin-top: 10px;
}

.pointer {
  cursor: pointer;
}

.editor {
  height: calc(100vh - 12px);
  width: 100%;
}

.btn {
  background-color: transparent;
  border: none;
  padding: 13px;
  cursor: pointer;
  font-size: 15px;

  &:disabled {
    color: gray;
  }
}

$spaceamounts: (0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 75, 100); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .m-#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px !important;
    }
  
    .p-#{str-slice($side, 0, 1)}-#{$space} {
      padding-#{$side}: #{$space}px !important;
    }

    .m-#{str-slice($side, 0, 1)}--#{$space} {
      margin-#{$side}: -#{$space}px !important;
    }
  
    .p-#{str-slice($side, 0, 1)}--#{$space} {
      padding-#{$side}: -#{$space}px !important;
    }
  }
}

.no-top {
  .is-top {
    margin: 0;
  }
}
